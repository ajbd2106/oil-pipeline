<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>

  <groupId>oil-pipeline</groupId>
  <artifactId>oil-pipeline</artifactId>
  <packaging>pom</packaging>
  <version>1.0-SNAPSHOT</version>
  <modules>
    <module>pipeline-api</module>
    <module>pipeline-engine</module>
    <module>pipeline-processor</module>
    <module>pipeline-sink</module>
    <module>pipeline-source</module>
    <module>pipeline-util</module>
    <module>pipeline-stage</module>
    <module>pipeline-extract</module>
    <module>pipeline-job</module>
    <module>pipeline-spark-engine</module>
    <module>pipeline-spark-kafka</module>
    <module>pipeline-spark-kafka-0-8</module>
    <module>pipeline-spark-kafka-0-10</module>
    <module>pipeline-spark-api</module>
    <module>pipeline-kafka</module>
    <module>pipeline-kafka-0-8</module>
    <module>pipeline-kafka-0-10</module>
    <module>pipeline-metrics</module>
    <module>pipeline-metrics-prometheus</module>
  </modules>

  <properties>
    <gson.version>2.8.1</gson.version>
    <junit.version>4.12</junit.version>
    <nutz.version>1.r.66</nutz.version>
    <guava.version>24.1-jre</guava.version>
    <commons.codec.version>1.10</commons.codec.version>
    <joda.time.version>2.9.5</joda.time.version>
    <metrics.version>3.2.3</metrics.version>
    <log4j.version>1.2.17</log4j.version>
    <spark.version>2.2.1</spark.version>
    <scala.version>2.11.5</scala.version>
    <scala.binary.version>2.11</scala.binary.version>
    <kafka08.version>0-8</kafka08.version>
    <kafka010.version>0-10</kafka010.version>
    <kafka_010.version>0.10.2.1</kafka_010.version>
    <kafka_080.version>0.8.2.1</kafka_080.version>
    <scala.version>2.11.5</scala.version>
    <scala.binary.version>2.11</scala.binary.version>
    <spark.version>2.2.1</spark.version>
    <curator.version>2.11.0</curator.version>
    <hadoop.version>2.5.0-cdh5.3.2</hadoop.version>
    <zookeeper.version>3.4.5</zookeeper.version>
    <prometheus.client>0.5.0</prometheus.client>
    <zookeeper.version>3.4.6</zookeeper.version>
    <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
  </properties>


  <dependencyManagement>
    <dependencies>

      <dependency>
        <groupId>junit</groupId>
        <artifactId>junit</artifactId>
        <version>${junit.version}</version>
        <scope>test</scope>
      </dependency>
      <!--start nutz-->
      <dependency>
        <groupId>org.nutz</groupId>
        <artifactId>nutz</artifactId>
        <version>${nutz.version}</version>
      </dependency>
      <!-- end nutz-->
      <!-- start guava,gson-->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
      <dependency>
        <groupId>com.google.guava</groupId>
        <artifactId>guava</artifactId>
        <version>${guava.version}</version>
      </dependency>
      <!-- end guava,gson-->
      <!--start commons-->
      <dependency>
        <groupId>commons-codec</groupId>
        <artifactId>commons-codec</artifactId>
        <version>${commons.codec.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>3.5</version>
      </dependency>
      <!-- end commons-->
      <!-- start joda time-->
      <dependency>
        <groupId>joda-time</groupId>
        <artifactId>joda-time</artifactId>
        <version>${joda.time.version}</version>
      </dependency>
      <!-- end joda time-->
      <!-- start metrics-->
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-core</artifactId>
        <version>${metrics.version}</version>
      </dependency>
      <dependency>
        <groupId>io.dropwizard.metrics</groupId>
        <artifactId>metrics-json</artifactId>
        <version>${metrics.version}</version>
      </dependency>
      <!-- end metrics-->
      <!-- start log4j-->
      <dependency>
        <groupId>log4j</groupId>
        <artifactId>log4j</artifactId>
        <version>${log4j.version}</version>
      </dependency>
      <dependency>
        <groupId>org.slf4j</groupId>
        <artifactId>slf4j-log4j12</artifactId>
        <version>1.7.22</version>
      </dependency>
      <!-- end log4j-->
      <!-- start spark-->
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-streaming_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-sql-kafka-${kafka010.version}_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-streaming_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
        <exclusions>
          <exclusion>
            <groupId>org.apache.hadoop</groupId>
            <artifactId>hadoop-client</artifactId>
          </exclusion>
        </exclusions>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-streaming-kafka-${kafka08.version}_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.spark</groupId>
        <artifactId>spark-streaming-kafka-${kafka010.version}_${scala.binary.version}</artifactId>
        <version>${spark.version}</version>
      </dependency>
      <!-- end spark-->
      <!-- prometheus -->
      <dependency>
        <groupId>io.prometheus</groupId>
        <artifactId>simpleclient_pushgateway</artifactId>
        <version>${prometheus.client}</version>
      </dependency>

      <dependency>
        <groupId>net.jpountz.lz4</groupId>
        <artifactId>lz4</artifactId>
        <version>1.3.0</version>
      </dependency>

      <!-- start zookeeper-->
      <dependency>
        <groupId>org.apache.zookeeper</groupId>
        <artifactId>zookeeper</artifactId>
        <version>${zookeeper.version}</version>
      </dependency>

      <!--<dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_${scala.binary.version}</artifactId>
        <version>${kafka_010.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka-clients</artifactId>
        <version>${kafka_010.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.kafka</groupId>
        <artifactId>kafka_${scala.binary.version}</artifactId>
        <version>${kafka_080.version}</version>
      </dependency>-->
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>3.5.1</version>
          <executions>
            <execution>
              <phase>package</phase>
              <goals>
                <goal>compile</goal>
              </goals>
            </execution>
          </executions>
          <configuration>
            <source>1.8</source>
            <target>1.8</target>
          </configuration>
        </plugin>

      </plugins>
    </pluginManagement>
  </build>
</project>